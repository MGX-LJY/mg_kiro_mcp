{
  "name": "JavaScript/Node.js",
  "version": "1.0.0",
  "description": "JavaScript和Node.js项目的语言配置",
  "detection": {
    "extensions": [".js", ".ts", ".jsx", ".tsx", ".mjs", ".cjs"],
    "config_files": [
      "package.json",
      "yarn.lock", 
      "package-lock.json",
      "pnpm-lock.yaml",
      "tsconfig.json",
      "webpack.config.js",
      "vite.config.js",
      "next.config.js",
      "nuxt.config.js"
    ],
    "directories": [
      "node_modules",
      "src",
      "lib", 
      "dist",
      "build",
      "public",
      "static",
      "pages",
      "components"
    ]
  },
  "package_managers": [
    {
      "name": "npm",
      "config_file": "package.json",
      "lock_file": "package-lock.json",
      "install_command": "npm install",
      "add_command": "npm install {package}",
      "dev_add_command": "npm install --save-dev {package}",
      "scripts": {
        "start": "npm start",
        "build": "npm run build",
        "test": "npm test",
        "lint": "npm run lint"
      }
    },
    {
      "name": "yarn", 
      "config_file": "package.json",
      "lock_file": "yarn.lock",
      "install_command": "yarn install",
      "add_command": "yarn add {package}",
      "dev_add_command": "yarn add --dev {package}",
      "scripts": {
        "start": "yarn start",
        "build": "yarn build", 
        "test": "yarn test",
        "lint": "yarn lint"
      }
    },
    {
      "name": "pnpm",
      "config_file": "package.json", 
      "lock_file": "pnpm-lock.yaml",
      "install_command": "pnpm install",
      "add_command": "pnpm add {package}",
      "dev_add_command": "pnpm add --save-dev {package}",
      "scripts": {
        "start": "pnpm start",
        "build": "pnpm build",
        "test": "pnpm test", 
        "lint": "pnpm lint"
      }
    }
  ],
  "frameworks": [
    {
      "name": "React",
      "category": "frontend",
      "detection_files": ["src/App.jsx", "src/App.tsx", "public/index.html"],
      "dependencies": ["react", "react-dom"],
      "dev_dependencies": ["@vitejs/plugin-react", "create-react-app"],
      "typical_structure": [
        "src/components/",
        "src/pages/", 
        "src/hooks/",
        "src/utils/",
        "public/"
      ]
    },
    {
      "name": "Vue",
      "category": "frontend", 
      "detection_files": ["src/App.vue", "vue.config.js"],
      "dependencies": ["vue"],
      "dev_dependencies": ["@vue/cli-service", "vite"],
      "typical_structure": [
        "src/components/",
        "src/views/",
        "src/router/",
        "src/store/"
      ]
    },
    {
      "name": "Angular",
      "category": "frontend",
      "detection_files": ["angular.json", "src/app/app.module.ts"],
      "dependencies": ["@angular/core", "@angular/common"],
      "dev_dependencies": ["@angular/cli"],
      "typical_structure": [
        "src/app/",
        "src/assets/",
        "src/environments/"
      ]
    },
    {
      "name": "Express",
      "category": "backend",
      "detection_files": ["app.js", "server.js", "index.js"],
      "dependencies": ["express"],
      "dev_dependencies": ["nodemon"],
      "typical_structure": [
        "routes/",
        "controllers/",
        "models/",
        "middleware/",
        "config/"
      ]
    },
    {
      "name": "Next.js",
      "category": "fullstack",
      "detection_files": ["next.config.js", "pages/", "app/"],
      "dependencies": ["next", "react", "react-dom"], 
      "dev_dependencies": [],
      "typical_structure": [
        "pages/",
        "components/",
        "styles/",
        "public/",
        "api/"
      ]
    },
    {
      "name": "NestJS",
      "category": "backend",
      "detection_files": ["nest-cli.json", "src/main.ts"],
      "dependencies": ["@nestjs/core", "@nestjs/common"],
      "dev_dependencies": ["@nestjs/cli"],
      "typical_structure": [
        "src/",
        "src/modules/",
        "src/controllers/",
        "src/services/"
      ]
    }
  ],
  "build_tools": [
    {
      "name": "Webpack",
      "config_file": "webpack.config.js",
      "commands": {
        "build": "webpack --mode production",
        "dev": "webpack serve --mode development"
      }
    },
    {
      "name": "Vite", 
      "config_file": "vite.config.js",
      "commands": {
        "build": "vite build",
        "dev": "vite dev"
      }
    },
    {
      "name": "Parcel",
      "config_file": ".parcelrc",
      "commands": {
        "build": "parcel build",
        "dev": "parcel serve"
      }
    }
  ],
  "test_frameworks": [
    {
      "name": "Jest",
      "config_file": "jest.config.js",
      "dependencies": ["jest"],
      "run_command": "jest",
      "watch_command": "jest --watch"
    },
    {
      "name": "Vitest",
      "config_file": "vite.config.js", 
      "dependencies": ["vitest"],
      "run_command": "vitest run",
      "watch_command": "vitest"
    },
    {
      "name": "Cypress",
      "config_file": "cypress.config.js",
      "dependencies": ["cypress"],
      "run_command": "cypress run",
      "open_command": "cypress open"
    }
  ],
  "linting_tools": [
    {
      "name": "ESLint",
      "config_file": ".eslintrc.js",
      "dependencies": ["eslint"],
      "run_command": "eslint .",
      "fix_command": "eslint . --fix"
    },
    {
      "name": "Prettier",
      "config_file": ".prettierrc",
      "dependencies": ["prettier"],
      "run_command": "prettier --check .",
      "fix_command": "prettier --write ."
    }
  ],
  "runtime_environments": [
    {
      "name": "Node.js",
      "version_managers": ["nvm", "n", "volta"],
      "version_file": ".nvmrc",
      "typical_versions": ["16.x", "18.x", "20.x", "latest"]
    },
    {
      "name": "Browser",
      "targets": ["Chrome", "Firefox", "Safari", "Edge"],
      "polyfills": ["core-js", "@babel/polyfill"]
    }
  ],
  "deployment_targets": [
    {
      "name": "Vercel",
      "config_file": "vercel.json",
      "build_command": "npm run build",
      "output_directory": "dist"
    },
    {
      "name": "Netlify",
      "config_file": "netlify.toml",
      "build_command": "npm run build", 
      "output_directory": "dist"
    },
    {
      "name": "Docker",
      "config_file": "Dockerfile",
      "base_images": ["node:18-alpine", "node:20-slim"]
    }
  ]
}