{
  "name": "Go",
  "version": "1.0.0",
  "description": "Go语言项目的语言配置", 
  "detection": {
    "extensions": [".go"],
    "config_files": [
      "go.mod",
      "go.sum",
      "go.work",
      "go.work.sum",
      "Gopkg.toml",
      "Gopkg.lock"
    ],
    "directories": [
      "vendor",
      "cmd",
      "pkg",
      "internal",
      "api",
      "web",
      "configs",
      "scripts",
      "build"
    ]
  },
  "package_managers": [
    {
      "name": "Go Modules",
      "config_file": "go.mod",
      "lock_file": "go.sum", 
      "init_command": "go mod init {module_name}",
      "install_command": "go mod download",
      "add_command": "go get {package}",
      "update_command": "go get -u {package}",
      "tidy_command": "go mod tidy",
      "vendor_command": "go mod vendor"
    },
    {
      "name": "dep (deprecated)",
      "config_file": "Gopkg.toml",
      "lock_file": "Gopkg.lock",
      "init_command": "dep init",
      "install_command": "dep ensure",
      "add_command": "dep ensure -add {package}"
    }
  ],
  "frameworks": [
    {
      "name": "Gin",
      "category": "web_framework",
      "detection_files": ["main.go"],
      "dependencies": ["github.com/gin-gonic/gin"],
      "typical_structure": [
        "main.go",
        "handlers/",
        "models/",
        "middleware/",
        "config/"
      ],
      "commands": {
        "start": "go run main.go",
        "build": "go build -o app main.go"
      }
    },
    {
      "name": "Echo",
      "category": "web_framework", 
      "detection_files": ["main.go"],
      "dependencies": ["github.com/labstack/echo/v4"],
      "typical_structure": [
        "main.go",
        "handlers/",
        "models/",
        "middleware/"
      ]
    },
    {
      "name": "Fiber",
      "category": "web_framework",
      "detection_files": ["main.go"],
      "dependencies": ["github.com/gofiber/fiber/v2"],
      "typical_structure": [
        "main.go", 
        "routes/",
        "handlers/",
        "models/"
      ]
    },
    {
      "name": "Beego",
      "category": "web_framework",
      "detection_files": ["main.go", "conf/app.conf"],
      "dependencies": ["github.com/beego/beego/v2"],
      "typical_structure": [
        "main.go",
        "controllers/",
        "models/",
        "views/",
        "conf/"
      ]
    },
    {
      "name": "gRPC",
      "category": "rpc_framework",
      "detection_files": ["*.proto"],
      "dependencies": ["google.golang.org/grpc"],
      "typical_structure": [
        "proto/",
        "server/",
        "client/",
        "pb/"
      ],
      "commands": {
        "generate": "protoc --go_out=. --go-grpc_out=. proto/*.proto"
      }
    }
  ],
  "build_tools": [
    {
      "name": "Go Build",
      "commands": {
        "build": "go build",
        "install": "go install",
        "clean": "go clean",
        "test": "go test ./...",
        "vet": "go vet ./...",
        "fmt": "go fmt ./..."
      }
    },
    {
      "name": "Make",
      "config_file": "Makefile",
      "commands": {
        "build": "make build",
        "test": "make test",
        "clean": "make clean"
      }
    },
    {
      "name": "Task",
      "config_file": "Taskfile.yml",
      "commands": {
        "build": "task build",
        "test": "task test"
      }
    }
  ],
  "test_frameworks": [
    {
      "name": "Testing (built-in)",
      "config_file": null,
      "dependencies": [],
      "run_command": "go test ./...",
      "verbose_command": "go test -v ./...",
      "coverage_command": "go test -cover ./..."
    },
    {
      "name": "Testify",
      "config_file": null,
      "dependencies": ["github.com/stretchr/testify"],
      "run_command": "go test ./..."
    },
    {
      "name": "Ginkgo",
      "config_file": null,
      "dependencies": ["github.com/onsi/ginkgo/v2"],
      "run_command": "ginkgo"
    },
    {
      "name": "GoConvey",
      "config_file": null,
      "dependencies": ["github.com/smartystreets/goconvey"],
      "run_command": "go test"
    }
  ],
  "linting_tools": [
    {
      "name": "gofmt",
      "built_in": true,
      "run_command": "gofmt -l .",
      "fix_command": "gofmt -w ."
    },
    {
      "name": "goimports", 
      "dependencies": ["golang.org/x/tools/cmd/goimports"],
      "run_command": "goimports -l .",
      "fix_command": "goimports -w ."
    },
    {
      "name": "golint",
      "dependencies": ["golang.org/x/lint/golint"],
      "run_command": "golint ./..."
    },
    {
      "name": "golangci-lint",
      "config_file": ".golangci.yml",
      "dependencies": ["github.com/golangci/golangci-lint"],
      "run_command": "golangci-lint run"
    },
    {
      "name": "go vet",
      "built_in": true, 
      "run_command": "go vet ./..."
    }
  ],
  "runtime_environments": [
    {
      "name": "Go Runtime",
      "version_managers": ["g", "gvm"],
      "version_file": ".go-version",
      "typical_versions": ["1.19", "1.20", "1.21", "1.22"],
      "version_check": "go version"
    }
  ],
  "project_layout": [
    {
      "name": "Standard Go Project Layout",
      "structure": [
        "cmd/",
        "internal/", 
        "pkg/",
        "api/",
        "web/",
        "configs/",
        "init/",
        "scripts/",
        "build/",
        "deployments/",
        "test/"
      ]
    }
  ],
  "deployment_targets": [
    {
      "name": "Docker",
      "config_file": "Dockerfile",
      "base_images": [
        "golang:1.21-alpine",
        "golang:1.22-alpine",
        "scratch",
        "distroless"
      ],
      "multi_stage_build": true
    },
    {
      "name": "Kubernetes",
      "config_files": ["deployment.yaml", "service.yaml"],
      "health_check": "/health"
    },
    {
      "name": "Binary Distribution",
      "cross_compile": {
        "linux": "GOOS=linux GOARCH=amd64 go build",
        "windows": "GOOS=windows GOARCH=amd64 go build", 
        "macos": "GOOS=darwin GOARCH=amd64 go build"
      }
    },
    {
      "name": "Cloud Functions",
      "platforms": ["Google Cloud Functions", "AWS Lambda"],
      "handler_pattern": "func Handler(w http.ResponseWriter, r *http.Request)"
    }
  ],
  "database_libraries": [
    {
      "name": "GORM",
      "dependencies": ["gorm.io/gorm"],
      "purpose": "ORM框架",
      "databases": ["MySQL", "PostgreSQL", "SQLite", "SQL Server"]
    },
    {
      "name": "sqlx", 
      "dependencies": ["github.com/jmoiron/sqlx"],
      "purpose": "SQL扩展库"
    },
    {
      "name": "database/sql",
      "built_in": true,
      "purpose": "标准SQL接口"
    }
  ],
  "popular_libraries": [
    {
      "name": "Viper",
      "dependencies": ["github.com/spf13/viper"],
      "purpose": "配置管理"
    },
    {
      "name": "Cobra",
      "dependencies": ["github.com/spf13/cobra"],
      "purpose": "CLI应用框架"
    },
    {
      "name": "Logrus",
      "dependencies": ["github.com/sirupsen/logrus"],
      "purpose": "结构化日志"
    },
    {
      "name": "Zap",
      "dependencies": ["go.uber.org/zap"],
      "purpose": "高性能日志"
    }
  ],
  "performance_tools": [
    {
      "name": "pprof",
      "built_in": true,
      "import": "net/http/pprof",
      "endpoint": "/debug/pprof/"
    },
    {
      "name": "Benchmarking",
      "built_in": true,
      "run_command": "go test -bench=."
    }
  ]
}